plugins {
    id("io.spring.dependency-management") version("1.1.0")
}

ext {
    lombokVersion = "1.18.26"
    logbackVersion = "1.4.6"
    jetbrainsAnnotationVersion = "24.0.1"
    jupiterVersion = "5.9.2"
    jakartaMailVersion = "2.0.1"
    springBootVersion = "3.0.4"
    fastjson2Version = "2.0.25"
    jakartaServletVersion = "6.0.0"
}

allprojects {
    apply {
        plugin("java-library") // java，可使用api方式导包
        plugin("maven-publish") // maven发布插件
        plugin("signing") // 组件签名插件
        plugin("io.spring.dependency-management")
    }

    group = "cn.starrys"
    version = "3.1.1-SNAPSHOT"
    description = "星空工具"

    dependencyManagement {
        dependencies {
            dependency("org.projectlombok:lombok:$lombokVersion")
            dependency("ch.qos.logback:logback-classic:$logbackVersion")
            dependency("org.jetbrains:annotations:$jetbrainsAnnotationVersion")
            dependencySet(group: "org.junit.jupiter", version: jupiterVersion) {
                entry("junit-jupiter-api")
                entry("junit-jupiter-engine")
            }
            dependency("org.eclipse.angus:jakarta.mail:$jakartaMailVersion")
            dependencySet(group: "org.springframework.boot", version: springBootVersion) {
                entry("spring-boot-autoconfigure")
                entry("spring-boot-configuration-processor")
            }
            dependency("com.alibaba.fastjson2:fastjson2:$fastjson2Version")
            dependency("jakarta.servlet:jakarta.servlet-api:$jakartaServletVersion")
        }
    }

    buildscript {
        repositories {
            mavenLocal()
            maven { name("tencentyun-maven"); url("https://mirrors.cloud.tencent.com/maven") }
            maven { name("aliyun-google-maven"); url("https://maven.aliyun.com/repository/google") }
            maven { name("aliyun-gradle-plugin"); url("https://maven.aliyun.com/repository/gradle-plugin") }
            gradlePluginPortal()
            mavenCentral()
        }
    }
    repositories {
        mavenLocal()
        maven { name("tencentyun-maven"); url("https://mirrors.cloud.tencent.com/maven") }
        maven { name("aliyun-google-maven"); url("https://maven.aliyun.com/repository/google") }
        mavenCentral()
    }

    java {
        // 生成 source.jar
        withSourcesJar()
        // 生成 javadoc.jar
        withJavadocJar()
    }

    tasks.withType(JavaCompile).tap {
        configureEach {
            options.encoding("UTF-8")
        }
    }
    tasks.withType(Javadoc).tap {
        configureEach {
            options {
                encoding("UTF-8")
                version(true)
            }
        }
    }

    clean {
        delete("$projectDir/out")
    }
}

subprojects {
    dependencies {
        // Lombok
        annotationProcessor("org.projectlombok:lombok")
        compileOnly("org.projectlombok:lombok")
        // 日志框架
        implementation("ch.qos.logback:logback-classic")
        // JetBrains注解
        implementation("org.jetbrains:annotations")

        // Junit5
        testImplementation("org.junit.jupiter:junit-jupiter-api")
        testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine")
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
                pom {
                    // eg: name = "星空的工具包"（此 name 非artifactId）
                    name = project.name
                    // 描述
                    description = project.description
                    // 项目地址
                    url = "https://gitee.com/AuroraStarry/starry-tool"

                    licenses {
                        // 许可证名称和地址
                        license {
                            name = "MIT License"
                            url = "https://gitee.com/AuroraStarry/starry-tool/blob/main/LICENSE"
                        }
                    }
                    developers {
                        // 开发者信息
                        developer {
                            // 开发者ID
                            // id = "11520532" // Gitee
                            // id = "79194954" // GitHub
                            // 开发者名
                            name = "AuroraStarry"
                            // 开发者邮箱
                            email = "AuroraStarry@126.com"
                        }
                    }
                    // 版本控制仓库地址
                    scm {
                        connection = "scm:git:git://gitee.com/AuroraStarry/starry-tool.git"
                        developerConnection = "scm:git:ssh://gitee.com/AuroraStarry/starry-tool.git"
                        // 仓库url
                        url = "https://gitee.com/AuroraStarry/starry-tool.git"
                    }
                }
            }
        }

        repositories {
            maven {
                name("OSSRH")
                final def sonatypeRepository = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2"
                final def sonatypeSnapshotRepository = "https://s01.oss.sonatype.org/content/repositories/snapshots"
                url(project.version.endsWith("SNAPSHOT") ? sonatypeSnapshotRepository : sonatypeRepository)
                credentials {
                    username(ossrhUsername)
                    password(ossrhPassword)
                }
            }
        }

    }
    signing {
        sign publishing.publications.mavenJava
    }

    test {
        useJUnitPlatform()
    }
}
